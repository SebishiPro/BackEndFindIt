# Generated by Django 4.1.2 on 2022-12-05 04:49

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Categorias',
            fields=[
                ('CategoriaId', models.AutoField(primary_key=True, serialize=False)),
                ('CategoriaName', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Ciudades',
            fields=[
                ('CiudadId', models.AutoField(primary_key=True, serialize=False)),
                ('CiudadName', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Comentarios',
            fields=[
                ('ComentarioId', models.AutoField(primary_key=True, serialize=False)),
                ('LugarId', models.CharField(max_length=100)),
                ('UsuarioId', models.CharField(max_length=100)),
                ('Comentario', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Historial',
            fields=[
                ('HistoricoId', models.AutoField(primary_key=True, serialize=False)),
                ('LugarId', models.CharField(max_length=100)),
                ('UsuarioId', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ImagenesPublicadas',
            fields=[
                ('ImagenId', models.AutoField(primary_key=True, serialize=False)),
                ('LugarId', models.CharField(max_length=100)),
                ('UsuarioId', models.CharField(max_length=100)),
                ('UrlImagen', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Lugares',
            fields=[
                ('LugarId', models.AutoField(primary_key=True, serialize=False)),
                ('LugarName', models.CharField(max_length=100)),
                ('CategoriaId', models.CharField(max_length=100)),
                ('Coordenadas', models.CharField(max_length=100)),
                ('Ciudad', models.CharField(max_length=100)),
                ('CodigoPostal', models.CharField(max_length=100)),
                ('Horario', models.CharField(max_length=100)),
                ('LugarStatus', models.CharField(max_length=100)),
                ('Servicios', models.CharField(max_length=100)),
                ('UrlImagen', models.CharField(max_length=100)),
                ('Likes', models.BigIntegerField()),
                ('Dislikes', models.BigIntegerField()),
                ('Numero', models.IntegerField()),
                ('Latitud', models.CharField(max_length=100)),
                ('Longitud', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='lugaresFavoritos',
            fields=[
                ('lugarFavoritoId', models.AutoField(primary_key=True, serialize=False)),
                ('UsuarioID', models.IntegerField()),
                ('LugarID', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Opiniones',
            fields=[
                ('OpinionId', models.AutoField(primary_key=True, serialize=False)),
                ('UsuarioId', models.IntegerField()),
                ('LugarId', models.IntegerField()),
                ('Comentario', models.CharField(max_length=100)),
                ('UrlImagen', models.CharField(max_length=100)),
                ('Like', models.IntegerField()),
                ('Dislike', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Publicidad',
            fields=[
                ('PublicidadId', models.AutoField(primary_key=True, serialize=False)),
                ('LugarId', models.IntegerField()),
                ('LugarName', models.CharField(max_length=100)),
                ('UrlImagen', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Servicios',
            fields=[
                ('ServicioId', models.AutoField(primary_key=True, serialize=False)),
                ('Nombre', models.CharField(max_length=100)),
                ('LugarId', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Usuarios',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('UsuarioName', models.CharField(max_length=100)),
                ('UsuarioEmail', models.CharField(max_length=100)),
                ('UsuarioStatus', models.CharField(max_length=100)),
                ('UrlImagen', models.CharField(max_length=100)),
                ('Descripcion', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('UsuarioName', models.CharField(max_length=100)),
                ('UsuarioEmail', models.EmailField(max_length=254, unique=True)),
                ('UsuarioPassword', models.CharField(max_length=100)),
                ('UsuarioStatus', models.CharField(max_length=100)),
                ('UrlImagen', models.CharField(max_length=100)),
                ('Descripcion', models.CharField(max_length=1000)),
                ('password', models.CharField(max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
